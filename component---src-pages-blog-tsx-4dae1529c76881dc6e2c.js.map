{"version":3,"sources":["webpack:///./src/components/Posts/index.tsx","webpack:///./src/pages/blog.tsx"],"names":["Posts","useStaticQuery","markdownRemark","allMarkdownRemark","sectionTitle","frontmatter","posts","edges","Container","section","TitleSection","title","subtitle","center","className","map","item","node","id","slug","fields","cover","description","date","tags","key","to","div","whileHover","scale","whileTap","childImageSharp","fluid","alt","BlogPage","Layout","SEO"],"mappings":"gPAyHeA,EAzFS,WAAM,MACkBC,yBAAe,cAArDC,EADoB,EACpBA,eAAgBC,EADI,EACJA,kBAsClBC,EAA6BF,EAAeG,YAC5CC,EAAgBH,EAAkBI,MAExC,OACE,kBAACC,EAAA,EAAD,CAAWC,SAAO,GAChB,kBAACC,EAAA,EAAD,CAAcC,MAAOP,EAAaO,MAAOC,SAAUR,EAAaQ,SAAUC,QAAM,IAChF,yBAAKC,UAAU,yBACZR,EAAMS,KAAI,SAACC,GAAS,MAKfA,EAAKC,KAHPC,EAFiB,EAEjBA,GACUC,EAHO,EAGjBC,OAAUD,KAHO,IAIjBd,YAAeM,EAJE,EAIFA,MAAOU,EAJL,EAIKA,MAAOC,EAJZ,EAIYA,YAAaC,EAJzB,EAIyBA,KAAMC,EAJ/B,EAI+BA,KAGlD,OACE,yBAAKC,IAAKP,EAAIJ,UAAU,uBACtB,kBAAC,IAAD,CAAMY,GAAIP,GACR,kBAAC,IAAOQ,IAAR,CAAYC,WAAY,CAAEC,MAAO,MAAQC,SAAU,CAAED,MAAO,IAC1D,yBAAKf,UAAU,sGACZO,EAAMU,gBAAgBC,OACrB,4BAAQlB,UAAU,UAChB,kBAAC,IAAD,CAAKkB,MAAOX,EAAMU,gBAAgBC,MAAOC,IAAKtB,KAGlD,yBAAKG,UAAU,4CACb,wBAAIA,UAAU,2BAA2BS,GACzC,wBAAIT,UAAU,sBAAsBH,GACpC,2BAAIW,IAEN,yBAAKR,UAAU,oBACZU,EAAKT,KAAI,SAACC,GAAD,OACR,0BACES,IAAKT,EACLF,UAAU,2IAETE,iBC3FZkB,UATY,WACzB,OACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKzB,MAAM,SACX,kBAAC,EAAD","file":"component---src-pages-blog-tsx-4dae1529c76881dc6e2c.js","sourcesContent":["import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport Img from 'gatsby-image';\nimport Link from 'gatsby-link';\nimport { motion } from 'framer-motion';\n\nimport Container from 'components/ui/Container';\nimport TitleSection from 'components/ui/TitleSection';\n\nimport { SectionTitle, ImageSharpFluid } from 'helpers/definitions';\n\n\ninterface Post {\n  node: {\n    id: string;\n    fields: {\n      slug: string;\n    };\n    frontmatter: {\n      title: string;\n      description: string;\n      date: string;\n      tags: string[];\n      cover: {\n        childImageSharp: {\n          fluid: ImageSharpFluid;\n        };\n      };\n    };\n  };\n}\n\nconst Posts: React.FC = () => {\n  const { markdownRemark, allMarkdownRemark } = useStaticQuery(graphql`\n    query {\n      markdownRemark(frontmatter: { category: { eq: \"blog section\" } }) {\n        frontmatter {\n          title\n          subtitle\n        }\n      }\n      allMarkdownRemark(\n        filter: { frontmatter: { category: { eq: \"blog\" }, published: { eq: true } } }\n        sort: { fields: frontmatter___date, order: DESC }\n      ) {\n        edges {\n          node {\n            id\n            html\n            fields {\n              slug\n            }\n            frontmatter {\n              title\n              description\n              date(formatString: \"MMM DD, YYYY\")\n              tags\n              cover {\n                childImageSharp {\n                  fluid(maxWidth: 800) {\n                    ...GatsbyImageSharpFluid\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const sectionTitle: SectionTitle = markdownRemark.frontmatter;\n  const posts: Post[] = allMarkdownRemark.edges;\n\n  return (\n    <Container section>\n      <TitleSection title={sectionTitle.title} subtitle={sectionTitle.subtitle} center />\n      <div className=\"w-full flex flex-wrap\">\n        {posts.map((item) => {\n          const {\n            id,\n            fields: { slug },\n            frontmatter: { title, cover, description, date, tags }\n          } = item.node;\n\n          return (\n            <div key={id} className=\"w-full sm:w-1/2 p-3\">\n              <Link to={slug}>\n                <motion.div whileHover={{ scale: 1.05 }} whileTap={{ scale: 1 }}>\n                  <div className=\"w-full h-full rounded-lg flex flex-col overflow-hidden border border-gray-300 dark:border-gray-700\">\n                    {cover.childImageSharp.fluid && (\n                      <figure className=\"w-full\">\n                        <Img fluid={cover.childImageSharp.fluid} alt={title} />\n                      </figure>\n                    )}\n                    <div className=\"p-4 text-indigo-900 dark:text-indigo-100\">\n                      <h3 className=\"text-xs text-indigo-500\">{date}</h3>\n                      <h3 className=\"font-semibold mb-4\">{title}</h3>\n                      <p>{description}</p>\n                    </div>\n                    <div className=\"p-4 pt-2 mt-auto\">\n                      {tags.map((item) => (\n                        <span\n                          key={item}\n                          className=\"text-xs text-indigo-900 dark:text-indigo-100 dark:text-indigo-1 border border-blue-400 dark:border-blue-600 rounded-full px-2 py-1 mr-2\"\n                        >\n                          {item}\n                        </span>\n                      ))}\n                    </div>\n                  </div>\n                </motion.div>\n              </Link>\n            </div>\n          );\n        })}\n      </div>\n    </Container>\n  );\n};\n\nexport default Posts;\n","import React from 'react';\n\nimport Layout from 'components/Layout';\nimport SEO from 'components/SEO';\nimport Posts from 'components/Posts';\n\nconst BlogPage: React.FC = () => {\n  return (\n    <Layout>\n      <SEO title=\"Blog\" />\n      <Posts />\n    </Layout>\n  );\n};\n\nexport default BlogPage;\n"],"sourceRoot":""}