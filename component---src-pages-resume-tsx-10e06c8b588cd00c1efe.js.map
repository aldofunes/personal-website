{"version":3,"sources":["webpack:///./src/components/ui/Timeline/index.tsx","webpack:///./src/components/Experience/index.tsx","webpack:///./src/components/Education/index.tsx","webpack:///./src/components/ui/ProgressBar/index.tsx","webpack:///./src/components/Skills/index.tsx","webpack:///./src/pages/resume.tsx","webpack:///./src/components/utils/FormatHtml/index.tsx"],"names":["Timeline","title","subtitle","content","startDate","endDate","className","Experience","useStaticQuery","markdownRemark","allMarkdownRemark","sectionTitle","frontmatter","experiences","edges","Container","section","TitleSection","map","item","node","id","html","company","position","key","FormatHtml","Education","education","university","degree","ProgressBar","percentage","style","width","Skills","skills","center","ResumePage","Layout","SEO","dangerouslySetInnerHTML","__html"],"mappings":"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","file":"component---src-pages-resume-tsx-10e06c8b588cd00c1efe.js","sourcesContent":["import React from 'react';\n\ninterface Props {\n  title: string;\n  subtitle: string;\n  content: React.ReactNode;\n  startDate: string;\n  endDate: string;\n}\n\nconst Timeline: React.FC<Props> = ({ title, subtitle, content, startDate, endDate }) => (\n  <div className=\"flex flex-col sm:flex-row w-full p-4 relative border-l border-indigo-200 last:pb-0\">\n    <span className=\"w-4 h-4 border border-indigo-200 bg-indigo-100 rounded-full absolute -left-2 top-4\" />\n    <div className=\"w-full sm:w-1/3\">\n      <div className=\"text-xs border  border-blue-400 rounded-full px-2 w-max\">\n        {startDate} - {endDate}\n      </div>\n      <div className=\"font-semibold mt-3\">{title}</div>\n      <div className=\"text-xs\">{subtitle}</div>\n    </div>\n    <div className=\"w-full sm:w-2/3 mt-4 sm:mt-0\">{content}</div>\n  </div>\n);\n\nexport default Timeline;\n","import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Timeline from 'components/ui/Timeline';\nimport Container from 'components/ui/Container';\nimport TitleSection from 'components/ui/TitleSection';\nimport FormatHtml from 'components/utils/FormatHtml';\n\nimport { SectionTitle } from 'helpers/definitions';\n\ninterface Experience {\n  node: {\n    id: string;\n    html: React.ReactNode;\n    frontmatter: {\n      company: string;\n      position: string;\n      startDate: string;\n      endDate: string;\n    };\n  };\n}\n\nconst Experience: React.FC = () => {\n  const { markdownRemark, allMarkdownRemark } = useStaticQuery(graphql`\n    query {\n      markdownRemark(frontmatter: { category: { eq: \"experiences section\" } }) {\n        frontmatter {\n          title\n          subtitle\n        }\n      }\n      allMarkdownRemark(\n        filter: { frontmatter: { category: { eq: \"experiences\" } } }\n        sort: { order: DESC, fields: fileAbsolutePath }\n      ) {\n        edges {\n          node {\n            id\n            html\n            frontmatter {\n              company\n              position\n              startDate\n              endDate\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const sectionTitle: SectionTitle = markdownRemark.frontmatter;\n  const experiences: Experience[] = allMarkdownRemark.edges;\n\n  return (\n    <Container section>\n      <TitleSection title={sectionTitle.title} subtitle={sectionTitle.subtitle} />\n\n      {experiences.map((item) => {\n        const {\n          id,\n          html,\n          frontmatter: { company, position, startDate, endDate }\n        } = item.node;\n\n        return (\n          <Timeline\n            key={id}\n            title={company}\n            subtitle={position}\n            content={<FormatHtml content={html} />}\n            startDate={startDate}\n            endDate={endDate}\n          />\n        );\n      })}\n    </Container>\n  );\n};\n\nexport default Experience;\n","import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Timeline from 'components/ui/Timeline';\nimport Container from 'components/ui/Container';\nimport TitleSection from 'components/ui/TitleSection';\nimport FormatHtml from 'components/utils/FormatHtml';\n\nimport { SectionTitle } from 'helpers/definitions';\n\ninterface Education {\n  node: {\n    id: string;\n    html: React.ReactNode;\n    frontmatter: {\n      university: string;\n      degree: string;\n      startDate: string;\n      endDate: string;\n    };\n  };\n}\n\nconst Education: React.FC = () => {\n  const { markdownRemark, allMarkdownRemark } = useStaticQuery(graphql`\n    query {\n      markdownRemark(frontmatter: { category: { eq: \"education section\" } }) {\n        frontmatter {\n          title\n          subtitle\n        }\n      }\n      allMarkdownRemark(\n        filter: { frontmatter: { category: { eq: \"education\" } } }\n        sort: { order: DESC, fields: fileAbsolutePath }\n      ) {\n        edges {\n          node {\n            id\n            html\n            frontmatter {\n              university\n              degree\n              startDate\n              endDate\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const sectionTitle: SectionTitle = markdownRemark.frontmatter;\n  const education: Education[] = allMarkdownRemark.edges;\n\n  return (\n    <Container section>\n      <TitleSection title={sectionTitle.title} subtitle={sectionTitle.subtitle} />\n\n      {education.map((item) => {\n        const {\n          id,\n          html,\n          frontmatter: { university, degree, startDate, endDate }\n        } = item.node;\n\n        return (\n          <Timeline\n            key={id}\n            title={university}\n            subtitle={degree}\n            content={<FormatHtml content={html} />}\n            startDate={startDate}\n            endDate={endDate}\n          />\n        );\n      })}\n    </Container>\n  );\n};\n\nexport default Education;\n","import React from 'react';\n\ninterface Props {\n  title: string;\n  percentage: number;\n}\n\nconst ProgressBar: React.FC<Props> = ({ title, percentage }) => (\n  <div className=\"p-3\">\n    <div className=\"w-full flex justify-between\">\n      <h3 className=\"font-semibold\">{title}</h3>\n      <h3 className=\"font-semibold\">{percentage}%</h3>\n    </div>\n    <div className=\"w-full h-2 bg-gray-300 rounded overflow-hidden mt-1\">\n      <div className=\"h-2 bg-blue-400\" style={{ width: `${percentage}%` }} />\n    </div>\n  </div>\n);\n\nexport default ProgressBar;\n","import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Container from 'components/ui/Container';\nimport TitleSection from 'components/ui/TitleSection';\nimport ProgressBar from 'components/ui/ProgressBar';\n\nimport { SectionTitle } from 'helpers/definitions';\n\ninterface Skill {\n  node: {\n    id: string;\n    frontmatter: {\n      title: string;\n      percentage: number;\n    };\n  };\n}\n\nconst Skills: React.FC = () => {\n  const { markdownRemark, allMarkdownRemark } = useStaticQuery(graphql`\n    query {\n      markdownRemark(frontmatter: { category: { eq: \"skills section\" } }) {\n        frontmatter {\n          title\n          subtitle\n        }\n      }\n      allMarkdownRemark(filter: { frontmatter: { category: { eq: \"skills\" } } }, sort: { fields: fileAbsolutePath }) {\n        edges {\n          node {\n            id\n            frontmatter {\n              title\n              percentage\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const sectionTitle: SectionTitle = markdownRemark.frontmatter;\n  const skills: Skill[] = allMarkdownRemark.edges;\n\n  return (\n    <Container section>\n      <TitleSection title={sectionTitle.title} subtitle={sectionTitle.subtitle} center />\n      <div className=\"flex flex-wrap w-full\">\n        {skills.map((item) => {\n          const {\n            id,\n            frontmatter: { title, percentage }\n          } = item.node;\n\n          return (\n            <div key={id} className=\"w-full sm:w-1/2\">\n              <ProgressBar title={title} percentage={percentage} />\n            </div>\n          );\n        })}\n      </div>\n    </Container>\n  );\n};\n\nexport default Skills;\n","import React from 'react';\n\nimport Layout from 'components/Layout';\nimport SEO from 'components/SEO';\nimport Experience from 'components/Experience';\nimport Education from 'components/Education';\nimport Skills from 'components/Skills';\n\nconst ResumePage: React.FC = () => (\n  <Layout>\n    <SEO title=\"Resume\" />\n    <Experience />\n    <hr />\n    <Education />\n    <hr />\n    <Skills />\n  </Layout>\n);\n\nexport default ResumePage;\n","import React, { ReactNode } from 'react';\n\ninterface Props {\n  content: any;\n}\n\nconst FormatHtml: React.FC<Props> = ({ content }) => (\n  <div\n    className=\"format-html font-serif\"\n    dangerouslySetInnerHTML={{\n      __html: content\n    }}\n  />\n);\n\nexport default FormatHtml;\n"],"sourceRoot":""}